apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sonarr.fullname" . }}
  labels:
    {{- include "sonarr.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "sonarr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sonarr.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sonarr.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /config
              name: config
      initContainers:
      {{- if eq (.Values.config).AuthenticationMethod "External" }}
        - name: config
          image: pipelinecomponents/xmllint:0.8.1
          securityContext:
            runAsUser: 1000 # Find a better way to preserve file ownership of config.xml.
            runAsGroup: 1000
          command:
            - /bin/sh
            - -c
            - |
              if ! [ -e "/config/config.xml" ] ; then
                  echo "No config.xml found, creating minimal config."
                  cat <<EOF >/config/config.xml
              <Config>
                <BindAddress>*</BindAddress>
                <Port>8989</Port>
                <SslPort>9898</SslPort>
                <EnableSsl>False</EnableSsl>
                <AuthenticationMethod>None</AuthenticationMethod>
              </Config>
              EOF
              fi
              
              xmllint --shell /config/config.xml << EOF
              cd /Config/AuthenticationMethod
              set External
              save
              EOF
          volumeMounts:
            - mountPath: /config
              name: config
      {{- end }}
      volumes:
        {{- if eq .Values.storage.data.type "hostPath" }}
        - name: data
          hostPath:
            path: {{ required "You need to set a path to the data directory! storage.data.path" .Values.storage.data.path }} # directory location on host
            type: Directory # this field is optional
        {{- else }}
          {{ fail "A valid .Values.storage.data.type needs to be set!"}}
        {{- end }}
        {{- if eq .Values.storage.config.type "hostPath" }}
        - name: config
          hostPath:
            path: {{ required "You need to set a path to the config directory! storage.config.path" .Values.storage.config.path }} # directory location on host
            type: Directory # this field is optional
        {{- else }}
          {{ fail "A valid .Values.storage.config.type needs to be set!"}}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
