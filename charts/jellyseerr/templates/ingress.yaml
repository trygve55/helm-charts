{{- if .Values.ingress.enabled -}}
{{- $fullName := include "jellyseerr.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "jellyseerr.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.clusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.clusterIssuer }}
    {{- end }}
    {{- if ne .Values.baseUrl "/" }}
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/proxy-redirect-from: /
    nginx.ingress.kubernetes.io/proxy-redirect-to: /
    nginx.ingress.kubernetes.io/configuration-snippet: |
      set $app '{{ trimPrefix "/" $.Values.baseUrl }}';
      
      proxy_redirect ^ /$app;
      proxy_redirect /setup /$app/setup;
      proxy_redirect /login /$app/login;
      
      # Sub filters to replace hardcoded paths
      proxy_set_header Accept-Encoding "";
      sub_filter_once off;
      sub_filter_types *;
      sub_filter 'href="/"' 'href="/$app"';
      sub_filter 'href="/login"' 'href="/$app/login"';
      sub_filter 'href="/setup"' 'href="/$app/setup"';
      sub_filter 'href:"/"' 'href:"/$app"';
      sub_filter '\/_next' '\/$app\/_next';
      sub_filter '/_next' '/$app/_next';
      sub_filter '/api/v1' '/$app/api/v1';
      sub_filter '/login/plex/loading' '/$app/login/plex/loading';
      sub_filter '/images/' '/$app/images/';
      sub_filter '/imageproxy/' '/$app/imageproxy/';
      sub_filter '/avatarproxy/' '/$app/avatarproxy/';
      sub_filter '/android-' '/$app/android-';
      sub_filter '/apple-' '/$app/apple-';
      sub_filter '/favicon' '/$app/favicon';
      sub_filter '/logo_' '/$app/logo_';
      sub_filter '/site.webmanifest' '/$app/site.webmanifest';
    {{- end }}
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  tls:
    {{- range .Values.ingress.hosts }}
    - hosts:
      - {{ .host | quote }}
      secretName: {{ .host }}-tls
    {{- end }}
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- if eq $.Values.baseUrl "/" }}
          - path: /
            pathType: Prefix
          {{- else }}
          - path: {{ $.Values.baseUrl }}/?(.*)$
            pathType: ImplementationSpecific
          {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- range .paths }}
            {{ fail "The ingress paths are managed using the \"baseUrl\" value. Please use this instead." }}
          {{- end }}
    {{- end }}
{{- end }}
