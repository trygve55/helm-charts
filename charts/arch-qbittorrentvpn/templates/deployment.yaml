apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arch-qbittorrentvpn.fullname" . }}
  labels:
    {{- include "arch-qbittorrentvpn.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "arch-qbittorrentvpn.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "arch-qbittorrentvpn.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "arch-qbittorrentvpn.serviceAccountName" . }}
      securityContext:
        {{- with .Values.podSecurityContext }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- with .Values.securityContext }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if and .Values.vpn.enabled (eq .Values.vpn.protocol "openvpn") }}
            capabilities:
              add:
                - NET_ADMIN
            {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: VPN_ENABLED
            {{- if .Values.vpn.enabled }}
            value: "yes"
            {{- else }}
            value: "no"
            {{- end }}
          - name: PUID
            value: "1000"
          - name: GUID
            value: "1000"
          {{- if .Values.vpn.enabled }}
          - name: VPN_PROV
            value: {{ .Values.vpn.provider }}
          - name: VPN_CLIENT
          {{- if eq .Values.vpn.protocol "openvpn" }}
            value: "openvpn"
          - name: VPN_USER
            valueFrom:
              secretKeyRef:
                name: vpn-credentials
                key: username
          - name: VPN_PASS
            valueFrom:
              secretKeyRef:
                name: vpn-credentials
                key: password
          {{- else if eq .Values.vpn.protocol "wireguard" }}
          {{- fail "Wireguard is not implemented yet." }}
          {{- end }}
          - name: LAN_NETWORK
            value: "10.42.0.0/24"
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          startupProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 20
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /config/qBittorrent
              name: config
            - name: openvpn-configuration
              mountPath: /config/openvpn/openvpn-config.ovpn
              subPath: openvpn-config.ovpn
              readOnly: true
      initContainers:
        - name: config
          image: busybox
          securityContext:
            runAsUser: 1000 # Find a better way to preserve file ownership of config.xml.
            runAsGroup: 1000
          command:
            - /bin/sh
            - -c
            - |
              if ! [ -e "/config/qBittorrent/config/qBittorrent.conf" ] ; then
                  echo "No /config/qBittorrent/config/qBittorrent.conf found, creating minimal config."
                  ls -la /config
                  mkdir --help
                  mkdir -p /config/qBittorrent/config
                  cat <<EOF >/config/qBittorrent/config/qBittorrent.conf
              [BitTorrent]
              Session\DefaultSavePath=/data/Downloads

              [Preferences]
              WebUI\AuthSubnetWhitelistEnabled=true
              WebUI\AuthSubnetWhitelist=0.0.0.0/0
              EOF
              fi;
          volumeMounts:
            - mountPath: /config/qBittorrent
              name: config
      volumes:
        {{- if eq .Values.storage.data.type "hostPath" }}
        - name: data
          hostPath:
            path: {{ required "You need to set a path to the data directory! storage.data.path" .Values.storage.data.path }} # directory location on host
            type: Directory # this field is optional
        {{- else }}
          {{ fail "A valid .Values.storage.data.type needs to be set!"}}
        {{- end }}
        {{- if eq .Values.storage.config.type "hostPath" }}
        - name: config
          hostPath:
            path: {{ required "You need to set a path to the config directory! storage.config.path" .Values.storage.config.path }} # directory location on host
            type: Directory # this field is optional
        {{- else }}
          {{ fail "A valid .Values.storage.config.type needs to be set!"}}
        {{- end }}
        - name: openvpn-configuration
          secret:
            secretName: vpn-credentials
            items:
            - key: openvpn-config.ovpn
              path: openvpn-config.ovpn
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
